# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Dev Continuous integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    container: projectserum/build:v0.27.0
    strategy:
      matrix:
        node-version: [20.x]
    steps:
    - name: Setup timezone
      uses: zcong1993/setup-timezone@master
      with:
        timezone: Europe/Paris
    - uses: actions/checkout@v3
    - name: List rustup toolchains
      run: rustup toolchain list
    - name: Set default toolchain
      run: rustup default stable
    - name: List rustup toolchains
      run: rustup toolchain list
    - name: Generate new keygen
      run: solana-keygen new
    - name: Set solana target cluster to local
      run: solana config set --url http:localhost:8899
    - name: Check solana config
      run: solana config get
    - name: Fetch all history for all tags and branches
      run: git fetch origin main
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache Node.js modules
      uses: actions/cache@v1
      with:
        path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
        key: ${{ runner.OS }}-node-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.OS }}-node-
    - name: Install Yarn
      run: |
        npm i -g yarn && corepack enable && yarn set version stable
    - name: Install
      run: |
        yarn install
    - name: Lint
      run: |
        yarn run lint-all
    - name: Compile
      run: |
        yarn run compile-all
